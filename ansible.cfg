[defaults]
# inventory = ./inventory/hosts.ini
# This specifies the default inventory file. It's often good practice to explicitly
# define it here, but if you always run from the root of the project like `ansible-playbook -i inventory/hosts.ini ...`,
# it's not strictly necessary. Uncomment if you want Ansible to auto-find it.
inventory = ./inventory/hosts.ini

# roles_path = ./roles
# This tells Ansible where to look for roles. By default, it looks in 'roles'
# relative to the playbook, which matches your current structure. Explicitly
# defining it can sometimes prevent ambiguity.
roles_path = ./roles

# remote_user = your_dev_user
# Defines the default user for SSH connections to remote hosts.
# For localhost connection (ansible_connection=local), this is often not needed.
# remote_user = ansible_user

# ask_pass = False
# If set to True, Ansible will prompt for the SSH password for remote connections.
# Set to False if you're using SSH keys (recommended) or 'ansible_connection=local'.
ask_pass = False

# become = True
# If True, Ansible will attempt to escalate privileges (e.g., using sudo) by default.
# This is often needed for installing software.
become = True

# become_method = sudo
# The method used for privilege escalation (e.g., 'sudo', 'su', 'doas').
become_method = sudo

# become_user = root
# The user to become (e.g., 'root' for system-wide changes).
become_user = root

# become_ask_pass = False
# If True, Ansible will prompt for the become password (e.g., sudo password).
# Set to False if you have passwordless sudo configured or are using 'ansible_connection=local'.
become_ask_pass = False

# gather_facts = True
# Whether Ansible should gather facts about the remote hosts. Facts are variables
# containing system information (OS, network interfaces, etc.). Generally useful.
gather_facts = True

# host_key_checking = True
# If True, Ansible will strictly check host keys. Set to False only if you
# understand the security implications (e.g., in volatile test environments).
# For dev setups, leaving it True (default) is safer.
host_key_checking = False # Often set to False for local dev or first run, but generally safer to keep True

# stdout_callback = yaml
# Changes the output format of Ansible. 'yaml' is often more readable than 'default'.
# Other options: 'json', 'debug', 'community.general.ansible_default_callback'.
stdout_callback = yaml

# display_skipped_hosts = True
# Whether to show tasks that were skipped. Useful for debugging.
display_skipped_hosts = False

# display_ok_hosts = True
# Whether to show tasks that completed successfully. Can be noisy.
display_ok_hosts = True

# Cowsay is fun, but can be disabled for less verbose output
nocows = 1 # Set to 0 to enable cowsay.

# forks = 5
# How many parallel processes (forks) Ansible will use. Adjust based on your system's resources.
# For local development, 5 is usually fine.
# forks = 5

# pipelining = True
# Speeds up Ansible by reducing the number of SSH operations. Requires 'requiretty' to be disabled
# in sudoers if using sudo. Generally recommended.
pipelining = True

# module_setup_path = ~/.ansible/tmp
# Directory where temporary files created by Ansible modules are stored on the target machine.
# Default is usually fine.

# log_path = /var/log/ansible.log
# Path to an optional log file. Uncomment to enable logging.
# log_path = ./ansible.log # Log inside the project for local dev

[privilege_escalation]
# These settings override the 'become' settings in [defaults] if specified.
# Usually, you'd manage privilege escalation globally in [defaults] unless
# you have very specific scenarios.

[ssh_connection]
# ssh_args = -o ControlMaster=auto -o ControlPersist=60s
# Improves SSH performance by reusing connections. Highly recommended.
ssh_args = -o ControlMaster=auto -o ControlPersist=60s

# scp_if_ssh = True
# Uses SCP for file transfers over SSH. Generally the default and preferred.
# scp_if_ssh = True

# retries = 3
# Number of times to retry an SSH connection.
# retries = 3

# pipelining = True
# Duplicated from [defaults] for clarity, but the one in [defaults] takes precedence.
# pipelining = True

# Number of parallel processes (forks) Ansible will use. Adjust based on your system's resources.
# For local development, 5 is usually fine.     
forks = 5