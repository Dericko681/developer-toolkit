---
# This file orchestrates the installation of various database clients and servers
# based on user selections from the prompt_user role.

- name: Debug message for Database Tools Installation
  ansible.builtin.debug:
    msg: "Starting installation tasks for database tools based on user choices."
  tags:
    - databases

# Note: Common system-wide dependencies (like build-essentials) should ideally be handled
# by a more foundational role (e.g., base_system).
# Specific client dependencies like libpq-dev will be placed in db_clients.yml.

# --- Include database client installation tasks ---
- name: Include common database clients installation tasks
  ansible.builtin.include_tasks: db_clients.yml
  when: install_db_clients | bool
  tags:
    - databases
    - db-clients

# --- Include PostgreSQL server installation tasks ---
- name: Include PostgreSQL server installation tasks
  ansible.builtin.include_tasks: postgresql_server.yml
  when: install_postgresql_server | bool
  tags:
    - databases
    - postgresql-server

# --- Include other database server/client tasks here as needed ---
# Example:
# - name: Include MySQL server installation tasks
#   ansible.builtin.include_tasks: mysql_server.yml
#   when: install_mysql_server | bool
#   tags:
#     - databases
#     - mysql-server

# - name: Include MongoDB installation tasks
#   ansible.builtin.include_tasks: mongodb.yml
#   when: install_mongodb | bool
#   tags:
#     - databases
#     - mongodb

# --- Verify installations ---
- name: Verify database tool installations
  ansible.builtin.command: "{{ item.cmd }}"
  loop:
    - { name: 'psql (client)', cmd: 'psql --version', when: install_db_clients | bool }
    - { name: 'PostgreSQL Server (pg_isready)', cmd: 'pg_isready', when: install_postgresql_server | bool }
    # Add verification for other clients/servers as they are implemented
    # - { name: 'mysql (client)', cmd: 'mysql --version', when: install_db_clients | bool }
    # - { name: 'redis-cli', cmd: 'redis-cli --version', when: install_db_clients | bool }
  register: db_tool_versions
  changed_when: false # Verification tasks do not change system state
  failed_when: db_tool_versions.rc != 0 # Fail if the verification command itself fails
  when: item.when # Only run verification for tools that were selected for installation
  loop_control:
    label: "Verifying {{ item.name }}"
  tags:
    - databases
    - verification