---
# This file orchestrates the installation of various cloud provider CLIs
# based on user selections from the prompt_user role.

- name: Debug message for Cloud Provider CLIs Installation
  ansible.builtin.debug:
    msg: "Starting installation tasks for cloud provider CLIs based on user choices."
  tags:
    - cloud-cli

# Ensure common dependencies for cloud CLIs are installed.
# python3 and python3-pip are good for AWS CLI. curl and unzip are general utilities.
- name: Ensure cloud CLI dependencies are installed
  ansible.builtin.apt:
    name:
      - curl
      - unzip
      - python3
      - python3-pip
    state: present
    update_cache: yes
  become: yes # Requires root for package installation
  tags:
    - cloud-cli
    - dependencies

# --- Include CLI-specific tasks based on user choices ---
- name: Include AWS CLI installation tasks
  ansible.builtin.include_tasks: aws_cli.yml
  when: install_aws_cli | bool
  tags:
    - cloud-cli
    - aws-cli

- name: Include Google Cloud SDK (gcloud) installation tasks
  ansible.builtin.include_tasks: gcloud_cli.yml # Renamed from gemini_cli.yml for clarity
  when: install_gemini_cli | bool # Keep original variable name from prompt_user
  tags:
    - cloud-cli
    - gcloud

# --- Verify installations ---
- name: Verify cloud CLI installations
  ansible.builtin.command: "{{ item.cmd }}"
  loop:
    - { name: 'aws-cli', cmd: 'aws --version', when: install_aws_cli | bool }
    - { name: 'gcloud', cmd: 'gcloud --version', when: install_gemini_cli | bool }
  register: cloud_cli_tool_versions
  changed_when: false # Verification tasks do not change system state
  failed_when: cloud_cli_tool_versions.rc != 0 # Fail if the command itself fails
  when: item.when # Only run verification for tools that were selected for installation
  loop_control:
    label: "Verifying {{ item.name }}"
  tags:
    - cloud-cli
    - verification