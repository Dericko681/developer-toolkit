---
# Prompt user for tool installation preferences and set facts for playbook execution
- name: Display Welcome Message and Instructions
  ansible.builtin.debug:
    msg: |
      =====================================================================
      Welcome to the Developer Toolkit Provisioner!
      This playbook sets up a development environment on Ubuntu 20.04/22.04.
      You will be prompted to choose tools to install, grouped by category.
      Enter 'y' for Yes or 'n' for No for each tool.
      Invalid inputs (anything other than 'y' or 'n') will be treated as 'n'.
      You have 5 minutes per prompt. Press Enter to skip (defaults to 'n').
      =====================================================================
      Press Ctrl+C to cancel or wait to proceed...
  tags:
    - prompt
    - always

# Initialize installation preferences
- name: Initialize installation preferences
  ansible.builtin.set_fact:
    install_zsh_plugins: "{{ 'false' }}"
    install_rust: "{{ 'false' }}"
    install_java: "{{ 'false' }}"
    install_go: "{{ 'false' }}"
    install_nodejs: "{{ 'false' }}"
    install_python: "{{ 'false' }}"
    install_terraform: "{{ 'false' }}"
    install_k8s_cli: "{{ 'false' }}"
    install_k9s: "{{ 'false' }}"
    install_k3s_cli: "{{ 'false' }}"
    install_ansible_cli: "{{ 'false' }}"
    install_ollama: "{{ 'false' }}"
    install_minio_client: "{{ 'false' }}"
    install_argocd_cli: "{{ 'false' }}"
    install_jenkins_cli: "{{ 'false' }}"
    install_helm: "{{ 'false' }}"
    install_huggingface_cli: "{{ 'false' }}"
    install_jupyterlab: "{{ 'false' }}"
    install_pytorch: "{{ 'false' }}"
    install_tensorflow: "{{ 'false' }}"
    install_db_clients: "{{ 'false' }}"
    install_postgresql_server: "{{ 'false' }}"
    install_aws_cli: "{{ 'false' }}"
    install_gemini_cli: "{{ 'false' }}"
    install_ide_editors: "{{ 'false' }}"
    install_version_control: "{{ 'false' }}"
    install_containerization: "{{ 'false' }}"
    install_cli_tools: "{{ 'false' }}"
  run_once: true
  tags:
    - prompt
    - always

# --- Base System ---
- name: "SECTION: Base System"
  ansible.builtin.debug:
    msg: "--- Configuring Base System ---"
  tags:
    - prompt
    - base-system

- name: Prompt for Oh My Zsh plugins
  ansible.builtin.vars_prompt:
    name: zsh_plugins_input
    prompt: "Install Oh My Zsh plugins (syntax highlighting, autocompletion) (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - base-system
- name: Set fact for Oh My Zsh plugins
  ansible.builtin.set_fact:
    install_zsh_plugins: "{{ 'true' if zsh_plugins_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - base-system

# --- Programming Languages & Runtimes ---
- name: "SECTION: Programming Languages & Runtimes"
  ansible.builtin.debug:
    msg: "--- Configuring Programming Languages & Runtimes ---"
  tags:
    - prompt
    - programming

- name: Prompt for Rust installation
  ansible.builtin.vars_prompt:
    name: rust_input
    prompt: "Install Rust (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - programming
- name: Set fact for Rust installation
  ansible.builtin.set_fact:
    install_rust: "{{ 'true' if rust_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - programming

- name: Prompt for Java installation
  ansible.builtin.vars_prompt:
    name: java_input
    prompt: "Install Java (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - programming
- name: Set fact for Java installation
  ansible.builtin.set_fact:
    install_java: "{{ 'true' if java_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - programming

- name: Prompt for Go installation
  ansible.builtin.vars_prompt:
    name: go_input
    prompt: "Install Go (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - programming
- name: Set fact for Go installation
  ansible.builtin.set_fact:
    install_go: "{{ 'true' if go_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - programming

- name: Prompt for Node.js installation
  ansible.builtin.vars_prompt:
    name: nodejs_input
    prompt: "Install Node.js (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - programming
- name: Set fact for Node.js installation
  ansible.builtin.set_fact:
    install_nodejs: "{{ 'true' if nodejs_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - programming

- name: Prompt for Python installation
  ansible.builtin.vars_prompt:
    name: python_input
    prompt: "Install Python (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - programming
- name: Set fact for Python installation
  ansible.builtin.set_fact:
    install_python: "{{ 'true' if python_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - programming

# --- DevOps & Cloud Native Tools ---
- name: "SECTION: DevOps & Cloud Native Tools"
  ansible.builtin.debug:
    msg: "--- Configuring DevOps & Cloud Native Tools ---"
  tags:
    - prompt
    - devops

- name: Prompt for Terraform installation
  ansible.builtin.vars_prompt:
    name: terraform_input
    prompt: "Install Terraform (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - devops
- name: Set fact for Terraform installation
  ansible.builtin.set_fact:
    install_terraform: "{{ 'true' if terraform_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - devops

- name: Prompt for Kubernetes CLI (kubectl) installation
  ansible.builtin.vars_prompt:
    name: k8s_cli_input
    prompt: "Install Kubernetes CLI (kubectl) (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - devops
- name: Set fact for Kubernetes CLI installation
  ansible.builtin.set_fact:
    install_k8s_cli: "{{ 'true' if k8s_cli_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - devops

- name: Prompt for K9s installation
  ansible.builtin.vars_prompt:
    name: k9s_input
    prompt: "Install K9s (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - devops
- name: Set fact for K9s installation
  ansible.builtin.set_fact:
    install_k9s: "{{ 'true' if k9s_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - devops

- name: Prompt for K3s client tools installation
  ansible.builtin.vars_prompt:
    name: k3s_cli_input
    prompt: "Install K3s client tools (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - devops
- name: Set fact for K3s client tools installation
  ansible.builtin.set_fact:
    install_k3s_cli: "{{ 'true' if k3s_cli_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - devops

- name: Prompt for Ansible CLI installation
  ansible.builtin.vars_prompt:
    name: ansible_cli_input
    prompt: "Install Ansible CLI (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - devops
- name: Set fact for Ansible CLI installation
  ansible.builtin.set_fact:
    install_ansible_cli: "{{ 'true' if ansible_cli_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - devops

- name: Prompt for Ollama installation
  ansible.builtin.vars_prompt:
    name: ollama_input
    prompt: "Install Ollama (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - devops
- name: Set fact for Ollama installation
  ansible.builtin.set_fact:
    install_ollama: "{{ 'true' if ollama_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - devops

- name: Prompt for MinIO Client installation
  ansible.builtin.vars_prompt:
    name: minio_client_input
    prompt: "Install MinIO Client (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - devops
- name: Set fact for MinIO Client installation
  ansible.builtin.set_fact:
    install_minio_client: "{{ 'true' if minio_client_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - devops

- name: Prompt for Argo CD CLI installation
  ansible.builtin.vars_prompt:
    name: argocd_cli_input
    prompt: "Install Argo CD CLI (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - devops
- name: Set fact for Argo CD CLI installation
  ansible.builtin.set_fact:
    install_argocd_cli: "{{ 'true' if argocd_cli_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - devops

- name: Prompt for Jenkins CLI installation
  ansible.builtin.vars_prompt:
    name: jenkins_cli_input
    prompt: "Install Jenkins CLI (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - devops
- name: Set fact for Jenkins CLI installation
  ansible.builtin.set_fact:
    install_jenkins_cli: "{{ 'true' if jenkins_cli_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - devops

- name: Prompt for Helm installation
  ansible.builtin.vars_prompt:
    name: helm_input
    prompt: "Install Helm (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - devops
- name: Set fact for Helm installation
  ansible.builtin.set_fact:
    install_helm: "{{ 'true' if helm_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - devops

# --- AI/ML/Data Science Tools ---
- name: "SECTION: AI/ML/Data Science Tools"
  ansible.builtin.debug:
    msg: "--- Configuring AI/ML/Data Science Tools ---"
  tags:
    - prompt
    - ai-ml

- name: Prompt for Hugging Face CLI installation
  ansible.builtin.vars_prompt:
    name: huggingface_cli_input
    prompt: "Install Hugging Face CLI (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - ai-ml
- name: Set fact for Hugging Face CLI installation
  ansible.builtin.set_fact:
    install_huggingface_cli: "{{ 'true' if huggingface_cli_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - ai-ml

- name: Prompt for JupyterLab installation
  ansible.builtin.vars_prompt:
    name: jupyterlab_input
    prompt: "Install JupyterLab (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - ai-ml
- name: Set fact for JupyterLab installation
  ansible.builtin.set_fact:
    install_jupyterlab: "{{ 'true' if jupyterlab_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - ai-ml

- name: Prompt for PyTorch installation
  ansible.builtin.vars_prompt:
    name: pytorch_input
    prompt: "Install PyTorch (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - ai-ml
- name: Set fact for PyTorch installation
  ansible.builtin.set_fact:
    install_pytorch: "{{ 'true' if pytorch_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - ai-ml

- name: Prompt for TensorFlow installation
  ansible.builtin.vars_prompt:
    name: tensorflow_input
    prompt: "Install TensorFlow (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - ai-ml
- name: Set fact for TensorFlow installation
  ansible.builtin.set_fact:
    install_tensorflow: "{{ 'true' if tensorflow_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - ai-ml

# --- Database Tools ---
- name: "SECTION: Database Tools"
  ansible.builtin.debug:
    msg: "--- Configuring Database Tools ---"
  tags:
    - prompt
    - databases

- name: Prompt for Database Clients installation
  ansible.builtin.vars_prompt:
    name: db_clients_input
    prompt: "Install Database Clients (PostgreSQL, MySQL, Redis) (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - databases
- name: Set fact for Database Clients installation
  ansible.builtin.set_fact:
    install_db_clients: "{{ 'true' if db_clients_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - databases

- name: Prompt for PostgreSQL Server installation
  ansible.builtin.vars_prompt:
    name: postgresql_server_input
    prompt: "Install PostgreSQL Server (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - databases
- name: Set fact for PostgreSQL Server installation
  ansible.builtin.set_fact:
    install_postgresql_server: "{{ 'true' if postgresql_server_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - databases

# --- Cloud Provider CLIs ---
- name: "SECTION: Cloud Provider CLIs"
  ansible.builtin.debug:
    msg: "--- Configuring Cloud Provider CLIs ---"
  tags:
    - prompt
    - cloud-cli

- name: Prompt for AWS CLI installation
  ansible.builtin.vars_prompt:
    name: aws_cli_input
    prompt: "Install AWS CLI (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - cloud-cli
- name: Set fact for AWS CLI installation
  ansible.builtin.set_fact:
    install_aws_cli: "{{ 'true' if aws_cli_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - cloud-cli

- name: Prompt for Google Cloud SDK installation
  ansible.builtin.vars_prompt:
    name: gemini_cli_input
    prompt: "Install Google Cloud SDK (gcloud) (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - cloud-cli
- name: Set fact for Google Cloud SDK installation
  ansible.builtin.set_fact:
    install_gemini_cli: "{{ 'true' if gemini_cli_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - cloud-cli

# --- IDEs and Editors ---
- name: "SECTION: IDEs and Editors"
  ansible.builtin.debug:
    msg: "--- Configuring IDEs and Editors ---"
  tags:
    - prompt
    - ide-editors

- name: Prompt for VS Code installation
  ansible.builtin.vars_prompt:
    name: ide_editors_input
    prompt: "Install VS Code (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - ide-editors
- name: Set fact for VS Code installation
  ansible.builtin.set_fact:
    install_ide_editors: "{{ 'true' if ide_editors_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - ide-editors

# --- Version Control Tools ---
- name: "SECTION: Version Control Tools"
  ansible.builtin.debug:
    msg: "--- Configuring Version Control Tools ---"
  tags:
    - prompt
    - version-control

- name: Prompt for Version Control tools installation
  ansible.builtin.vars_prompt:
    name: version_control_input
    prompt: "Install Version Control tools (e.g., Git) (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - version-control
- name: Set fact for Version Control tools installation
  ansible.builtin.set_fact:
    install_version_control: "{{ 'true' if version_control_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - version-control

# --- Containerization Tools ---
- name: "SECTION: Containerization Tools"
  ansible.builtin.debug:
    msg: "--- Configuring Containerization Tools ---"
  tags:
    - prompt
    - containerization

- name: Prompt for Containerization tools installation
  ansible.builtin.vars_prompt:
    name: containerization_input
    prompt: "Install Containerization tools (e.g., Docker) (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - containerization
- name: Set fact for Containerization tools installation
  ansible.builtin.set_fact:
    install_containerization: "{{ 'true' if containerization_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - containerization

# --- CLI Tools ---
- name: "SECTION: CLI Tools"
  ansible.builtin.debug:
    msg: "--- Configuring CLI Tools ---"
  tags:
    - prompt
    - cli-tools

- name: Prompt for CLI Tools installation
  ansible.builtin.vars_prompt:
    name: cli_tools_input
    prompt: "Install CLI Tools (e.g., jq, yq) (y/n)?"
    default: "n"
    private: no
    timeout: 300
  tags:
    - prompt
    - cli-tools
- name: Set fact for CLI Tools installation
  ansible.builtin.set_fact:
    install_cli_tools: "{{ 'true' if cli_tools_input | lower == 'y' else 'false' }}"
  tags:
    - prompt
    - cli-tools

# Display summary of selected tools
- name: Display summary of selected tools
  ansible.builtin.debug:
    msg: |
      Installation preferences:
      Oh My Zsh Plugins: {{ install_zsh_plugins }}
      Rust: {{ install_rust }}
      Java: {{ install_java }}
      Go: {{ install_go }}
      Node.js: {{ install_nodejs }}
      Python: {{ install_python }}
      Terraform: {{ install_terraform }}
      Kubernetes CLI (kubectl): {{ install_k8s_cli }}
      K9s: {{ install_k9s }}
      K3s client: {{ install_k3s_cli }}
      Ansible CLI: {{ install_ansible_cli }}
      Ollama: {{ install_ollama }}
      MinIO Client: {{ install_minio_client }}
      Argo CD CLI: {{ install_argocd_cli }}
      Jenkins CLI: {{ install_jenkins_cli }}
      Helm: {{ install_helm }}
      Hugging Face CLI: {{ install_huggingface_cli }}
      JupyterLab: {{ install_jupyterlab }}
      PyTorch: {{ install_pytorch }}
      TensorFlow: {{ install_tensorflow }}
      Database Clients: {{ install_db_clients }}
      PostgreSQL Server: {{ install_postgresql_server }}
      AWS CLI: {{ install_aws_cli }}
      Google Cloud SDK: {{ install_gemini_cli }}
      VS Code: {{ install_ide_editors }}
      Version Control: {{ install_version_control }}
      Containerization: {{ install_containerization }}
      CLI Tools: {{ install_cli_tools }}
  tags:
    - prompt
    - summary
